services:
  postgres:
    env_file:
      - .env
    image: postgres:15.4
    container_name: prg_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: unless-stopped
    networks:
      - plateerag_network

  qdrant:
    env_file:
      - .env
    image: qdrant/qdrant:latest
    restart: unless-stopped
    container_name: qdrant
    ports:
      - "${QDRANT_HTTP_PORT}:6333"
      - "${QDRANT_GRPC_PORT}:6334"
    configs:
      - source: qdrant_config
        target: ${QDRANT_CONFIG_PATH}
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - plateerag_network

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: plateerag_backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    command: uv run uvicorn main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app
    volumes:
      - .:/app:delegated
      - ./backup/service/eval/job_data:/app/job_data
      - ./backup/service/eval/eval_job_data:/app/eval_job_data
      - ./backup/downloads:/app/downloads
      - ./backup/constants:/app/constants
    depends_on:
      - postgres
      - qdrant
      - gaudi-service
    restart: unless-stopped
    networks:
      - plateerag_network

  gaudi-service:
    build:
      context: .
      dockerfile: Dockerfile.hpu
    container_name: gaudi_vllm_service
    runtime: habana
    environment:
      - HABANA_VISIBLE_DEVICES=all
      - OMPI_MCA_btl_vader_single_copy_mechanism=none
      - PT_HPU_ENABLE_LAZY_COLLECTIVES=true
    cap_add:
      - SYS_NICE
    # Gaudi만 host 네트워크 사용 (HPU 액세스를 위해)
    network_mode: host
    ports:
      - "8080:8080"
    env_file:
      - .env
    command: uvicorn gaudi_service:app --host 0.0.0.0 --port 8080 --reload --reload-dir /app
    volumes:
      - .:/app:delegated
    restart: unless-stopped

volumes:
  postgres_data:
  qdrant_data:

networks:
  plateerag_network:
    driver: bridge

configs:
  qdrant_config:
    content: |
      log_level: INFO